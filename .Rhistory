mutate(reserve_date = date(reserve_datetime),
reserve_hour = hour(reserve_datetime),
reserve_wday = wday(reserve_datetime, label= TRUE, week_start = 1),
visit_date = date(visit_datetime),
visit_hour = hour(visit_datetime),
visit_wday = wday(visit_datetime, label= TRUE, week_start = 1),
diff_hour = time_length(visit_datetime - reserve_datetime, unit = 'hour'),
diff_day = time_length(visit_datetime - reserve_datetime, unit = 'day')
)
doe
p1 <- doe %>%
group_by(visit_date) %>%
summarise(all_visitors = sum(reserve_visitors)) %>%
ggplot(aes(x=visit_date, y=all_visitors))+
geom_line() + labs(x='hpg visit date')
p2 <- doe %>%
group_by(visit_hour) %>%
summarise(all_visitors = sum(reserve_visitors)) %>%
ggplot(aes(x=visit_hour, y=all_visitors))+
geom_col(fill='red')
p3 <- doe %>%
filter(diff_hour < 24*5) %>%
group_by(diff_hour) %>%
summarise(all_visitors = sum(reserve_visitors)) %>%
ggplot(aes(x=diff_hour, y=all_visitors))+
geom_col(fill='red') + labs(x='Time from reservation to visit (hrs)')
library('ggplot2')
library('scales')
library('grid')
library('gridExtra')
library('RColorBrewer')
library('corrplot')
library('dplyr')      # data manipulation
library('readr')      # input/output
library('data.table') # data manipulation
library('tibble')     # data wrangling
library('tidyr')      # data wrangling
library('stringr')    # string manipulation
library('forcats')    # factor manipulation
library('ggrepel')
library('ggridges')
library('ggExtra')
library('ggforce')
library('viridis')
library('lazyeval') # data wrangling
library('broom')    # data wrangling
library('purrr')    # string manipulation
# data plus forecast
library('lubridate')
library('timeDate')
library('tseries')
library('forecast')
library('prophet')
library('timetk')
# maps / geospatial
library('geosphere')
library('leaflet')
library('leaflet.extras')
library('maps')
head(doe)
p3 <- doe %>%
filter(diff_hour < 24*5) %>%
group_by(diff_hour) %>%
summarise(all_visitors = sum(reserve_visitors)) %>%
ggplot(aes(x=diff_hour, y=all_visitors))+
geom_col(fill='red') + labs(x='Time from reservation to visit (hrs)')
p3 <- doe %>%
dplyr::filter(diff_hour < 24*5) %>%
group_by(diff_hour) %>%
summarise(all_visitors = sum(reserve_visitors)) %>%
ggplot(aes(x=diff_hour, y=all_visitors))+
geom_col(fill='red') + labs(x='Time from reservation to visit (hrs)')
layout <- matrix(c(1,1,2,3),2,2,byrow = TRUE)
multiplot(p1,p2,p3,layout=layout)
library('dplyr')
# switching from temporal data to spatial data analysis
# the latitudes and longitudes provided are just the area in which the restaurant
# belongs, as they do not want us identifying specific restaurant names
leaflet(air_store) %>%
addTiles() %>%
addProviderTiles('CartoDB.Positron') %>%
addMarkers(~longitude, ~latitude,
popup= ~air_store_id, label= ~air_genre_name,
clusterOptions= markerClusterOptions())
p1 <- air_store %>%
group_by(air_genre_name) %>%
count() %>%
ggplot(aes(reorder(air_genre_name, n, FUN= min), n, fill= air_genre_name))+
geom_col() + coord_flip() + theme(legend.position= 'none')+
labs(x='Type of cuisine', y= 'Number of air restaurants')
p2 <- air_store %>%
group_by(air_area_name) %>%
count() %>%
ungroup() %>%
top_n(15,n) %>%
ggplot(aes(reorder(air_area_name, n, FUN= min), n, fill= air_area_name))+
geom_col() + coord_flip() + theme(legend.position= 'none')+
labs(x='Top 15 areas', y= 'Number of air restaurants')
layout <- matrix(c(1,2),2,1,byrow=TRUE)
multiplot(p1,p2,layout=layout)
# we'll do the same but for the hpg_store data
leaflet(hpg_store) %>%
addTiles() %>%
addProviderTiles('CartoDB.Positron') %>%
addMarkers(~longitude, ~latitude,
popup= ~hpg_store_id, label= ~hpg_genre_name,
clusterOptions= markerClusterOptions())
p1 <- hpg_store %>%
group_by(hpg_genre_name) %>%
count() %>%
ggplot(aes(reorder(hpg_genre_name, n, FUN= min), n, fill= hpg_genre_name))+
geom_col() + coord_flip() + theme(legend.position= 'none')+
labs(x='Type of cuisine', y= 'Number of hpg restaurants')
p2 <- hpg_store %>%
mutate(area= str_sub(hpg_area_name, 1,20)) %>%
group_by(area) %>%
count() %>%
ungroup() %>%
top_n(15,n) %>%
ggplot(aes(reorder(area, n, FUN= min), n, fill= area))+
geom_col() + coord_flip() + theme(legend.position= 'none')+
labs(x='Top 15 areas', y= 'Number of hpg restaurants')
layout <- matrix(c(1,2),1,2,byrow=TRUE)
multiplot(p1,p2,layout=layout)
foo <- holidays %>%
mutate(wday= wday(date, week_start = 1))
p1 <- foo %>%
ggplot(aes(x=holiday_flg, fill=holiday_flg))+
geom_bar() + theme(legend.position = 'none')
p2 <- foo %>%
filter(date > ymd('2016-04-15') & date < ymd('2016-06-01')) %>%
ggplot(aes(x= date, y= holiday_flg, color= holiday_flg))+
geom_point(size=2)+
theme(legend.position='none') + labs(x='2016 date')
p2 <- foo %>%
dplyr::filter(date > ymd('2016-04-15') & date < ymd('2016-06-01')) %>%
ggplot(aes(x= date, y= holiday_flg, color= holiday_flg))+
geom_point(size=2)+
theme(legend.position='none') + labs(x='2016 date')
p3 <- foo %>%
dplyr::filter(date > ymd('2017-04-15') & date < ymd('2017-06-01')) %>%
ggplot(aes(x= date, y= holiday_flg, color= holiday_flg))+
geom_point(size=2)+
theme(legend.position='none') + labs(x='2017 date')
layout <- matrix(c(1,1,2,3),2,2,byrow=FALSE)
multiplot(p1,p2,p3,layout=layout)
holidays %>%  summarise(frac=mean(holiday_flg))
# lets plots out visually the test vs training sets date ranges
foo <- air_visits %>%
rename(date= visit_date) %>%
distinct(date) %>%
mutate(dset= 'train')
# lets plots out visually the test vs training sets date ranges
foo <- air_visits %>%
dplyr::rename(date= visit_date) %>%
distinct(date) %>%
mutate(dset= 'train')
bar <- test %>%
separate(id,c('foo', 'bar', 'date'), sep='_') %>%
mutate(date= ymd(date)) %>%
distinct(date) %>%
mutate(dset='test')
foo <- foo %>%
bind_rows(bar) %>%
mutate(year=year(date))
# the goal was to have all the data on the same 'year' for the full date col but
# maintain the specific year col as the original to have them show up on the same
# point chart but then categorize them as diff based on the dset and year cols
year(foo$date) <- 2017
foo %>%
dplyr::filter(!is.na(date)) %>%
mutate(year= fct_relevel(as.factor(year), c('2017', '2016'))) %>%
ggplot(aes(x=date, y=year, color=dset))+
geom_point(shape='|', size=10)+
scale_x_date(date_labels= '%B', date_breaks= '1 month')+
# scale_y_reverse()+
theme(legend.position= 'bottom', axis.text.x= element_text(angle=45, hjust=1,
vjust=0.9))+
labs(color='Data set')+
guides(color= guide_legend(override.aes= list(size= 4, pch= 15)))
# now we move to feature relations
foo <- air_visits %>%
left_join(air_store, by= 'air_store_id')
foo %>%
group_by(visit_date, air_genre_name) %>%
summarise(mean_visitors= mean(visitors)) %>%
ungroup() %>%
ggplot(aes(x= visit_date, y= mean_visitors, color=air_genre_name))+
geom_line()+
labs(x='Date', y='Average number of visitors (Air)')+
theme(legend.position='none')+
scale_y_log10()+
facet_wrap(~air_genre_name)
p1 <- foo %>%
mutate(wday= wday(visit_date, label=TRUE, week_start = 1)) %>%
group_by(wday, air_genre_name) %>%
summarise(mean_visitors = mean(visitors)) %>%
ggplot(aes(x= air_genre_name, y= mean_visitors, color= wday))+
geom_point(size=4)+
theme(legend.position = 'left', axis.text.y= element_blank(),
plot.title = element_text(size=14))+
coord_flip()+
labs(x='') + scale_x_discrete(position='top')+
ggtitle('air_genre_name')+
scale_color_hue()
p2 <- foo %>%
ggplot(aes(x=visitors, y=air_genre_name, fill=air_genre_name))+
geom_density_ridges(bandwidth=0.1)+
scale_x_log10()+
theme(legend.position = 'none')+
labs(y='')+
scale_fill_cyclical(values=c('blue', 'red'))
layout <- matrix(c(1,1,2,2,2),1,5, byrow=TRUE)
multiplot(p1,p2,layout=layout)
# Impact of holidays
foo <- air_visits %>%
mutate(calendar_date=as.character(visit_date)) %>%
left_join(holidays, by='calendar_date')
p1 <- foo %>%
ggplot(aes(x=holiday_flg, y=visitors, color=holiday_flg))+
geom_boxplot()+
scale_y_log10()+
theme(legend.position='none')
p2 <- foo %>%
mutate(wday=wday(date, label=TRUE, week_start=1)) %>%
group_by(wday, holiday_flg) %>%
summarise(mean_visitors=mean(visitors)) %>%
ggplot(aes(x=wday, y=mean_visitors, color=holiday_flg))+
geom_point(size=4) + theme(legend.position='none')+
labs(y='Average number of visitors')
layout <- matrix(c(1,2), 1,2 byrow=TRUE)
layout <- matrix(c(1,2), 1,2, byrow=TRUE)
multiplot(p1,p2,layout=layout)
# Restaurants per are and the effect on visitor numbers
# we will look at the number of restaurants of a certain genre per area and their
# impact on visitor numbers
air_store %>%
mutate(area=str_sub(air_area_name, 1, 12)) %>%  # truncate the full area name
ggplot(aes(x=area, y=air_genre_name))+
geom_count(color='dodgerblue')+
theme(legend.position='bottom', axis.text.x=element.text(angle=90, hjust=1, vjust=0.9))
# Restaurants per are and the effect on visitor numbers
# we will look at the number of restaurants of a certain genre per area and their
# impact on visitor numbers
air_store %>%
mutate(area=str_sub(air_area_name, 1, 12)) %>%  # truncate the full area name
ggplot(aes(x=area, y=air_genre_name))+
geom_count(color='dodgerblue')+
theme(legend.position='bottom', axis.text.x=element_text(angle=90, hjust=1, vjust=0.9))
# HPG data
hpg_store %>%
mutate(area=str_sub(hpg_area_name, 1, 12)) %>%  # truncate the full area name
ggplot(aes(x=area, y=hpg_genre_name))+
geom_count(color='firebrick1')+
theme(legend.position='bottom', axis.text.x=element_text(angle=90, hjust=1, vjust=0.9))
# Air data
air_store %>%
group_by(air_genre_name, air_area_name) %>%
count() %>%
ggplot(aes(reorder(x=air_genre_name, y=n, FUN=mean), n))+
geom_boxplot()+
geom_jitter(color='dodgerblue')+
scale_y_log10()+
coord_flip()+
labs(x='Air genre', y='Mean OCcurences per air area')
# Air data
air_store %>%
group_by(air_genre_name, air_area_name) %>%
count() %>%
ggplot(aes(reorder(air_genre_name, n, FUN=mean), n))+
geom_boxplot()+
geom_jitter(color='dodgerblue')+
scale_y_log10()+
coord_flip()+
labs(x='Air genre', y='Mean OCcurences per air area')
# Air data
air_store %>%
group_by(air_genre_name, air_area_name) %>%
count() %>%
ggplot(aes(reorder(air_genre_name, n, FUN=mean), n))+
geom_boxplot()+
geom_jitter(color='dodgerblue')+
scale_y_log10()+
coord_flip()+
labs(x='Air genre', y='Occurences per air area')
tmp <- air_store %>%
group_by(air_genre_name, air_area_name) %>%
mutate(genre_count=count())
tmp <- air_store %>%
group_by(air_genre_name, air_area_name) %>%
mutate(genre_count=count(air_genre_name))
tmp <- air_store %>%
group_by(air_genre_name, air_area_name) %>%
count()
tmp
tmp %>%
order_by(-n)
min(tmp$n)
# this means there is no Air restaurant that is the only one of its genre in any area
# can take a deeper dive into the data to check out one of these occurrences
# looking at a pair of 'Dining Bar' restaurants and their visit data
air_store %>%
filter(air_store_id=='air_b5598d12d1b84890' | air_store_id=='air_bbe1c1a47e09f161')
# this means there is no Air restaurant that is the only one of its genre in any area
# can take a deeper dive into the data to check out one of these occurrences
# looking at a pair of 'Dining Bar' restaurants and their visit data
air_store %>%
dplyr::filter(air_store_id=='air_b5598d12d1b84890' | air_store_id=='air_bbe1c1a47e09f161')
# these two are the same long and lat and genres, thus same area name as well
air_store %>%
dplyr::filter(air_store_id=='air_b5598d12d1b84890' | air_store_id=='air_bbe1c1a47e09f161') %>%
arrange(visit_dae) %>%
head(10)
# these two are the same long and lat and genres, thus same area name as well
air_store %>%
dplyr::filter(air_store_id=='air_b5598d12d1b84890' | air_store_id=='air_bbe1c1a47e09f161') %>%
arrange(visit_date) %>%
head(10)
# these two are the same long and lat and genres, thus same area name as well
air_visits %>%
dplyr::filter(air_store_id=='air_b5598d12d1b84890' | air_store_id=='air_bbe1c1a47e09f161') %>%
arrange(visit_date) %>%
head(10)
# we can perform the same boxplot for HPG restaurants
hpg_store %>%
group_by(hpg_genre_name, hpg_area_name) %>%
count() %>%
ggplot(aes(reorder(hpg_genre_name, n, FUN=mean), n))+
geom_boxplot()+
geom_jitter(color='firebrick1')+
scale_y_log10()+
coord_flip()+
labs(x='HPG genre', y='Occurences per air area')
foo <- air_visits %>%
left_join(air_store, by=air_store_id)
foo <- air_visits %>%
left_join(air_store, by='air_store_id')
bar <- air_store %>%
group_by(air_genre_name, air_area_name) %>%
count()
foobar <- hpg_store %>%
group_by(hpg_genre_name, hpg_area_name) %>%
count()
p1 <- bar %>%
ggplot(aes(n))+
geom_histogram(fill='dodgerblue', binwidth=1)+
labs(x='Air genres per area')
foo
air_visits
p2 <- bar %>%
ggplot(aes(n))+
geom_histogram(fill='firebrick1', binwidth=1)+
labs(x='HPG genres per area')
p3 <- foo %>%
group_by(air_genre_name, air_area_name) %>%
summarise(mean_log_visit=mean(log1p(visitors))) %>%
left_join(bar, by=c('air_genre_name', 'air_area_name')) %>%
group_by(n) %>%
summarise(mean_mlv=mean(mean_log_visit),
sd_mlv=sd(mean_log_visit)) %>%
replace_na(list(sd_mlv=0)) %>%
ggplot(aes(n, mean_mlv))+
geom_point(color=dodgerblue, size=4)+
geom_errorbar(aes(ymin= mean_mlv-sd_mlv, ymax= mean_mlv+sd_mlv), width=0.5, size=0.7,
color='dodgerblue')+
labs(x='Cases of identical Air genres per area', y='Mean +/- SD of\n mean log1p visitors')
p3 <- foo %>%
group_by(air_genre_name, air_area_name) %>%
summarise(mean_log_visit=mean(log1p(visitors))) %>%
left_join(bar, by=c('air_genre_name', 'air_area_name')) %>%
group_by(n) %>%
summarise(mean_mlv=mean(mean_log_visit),
sd_mlv=sd(mean_log_visit)) %>%
replace_na(list(sd_mlv=0)) %>%
ggplot(aes(n, mean_mlv))+
geom_point(color='dodgerblue', size=4)+
geom_errorbar(aes(ymin= mean_mlv-sd_mlv, ymax= mean_mlv+sd_mlv), width=0.5, size=0.7,
color='dodgerblue')+
labs(x='Cases of identical Air genres per area', y='Mean +/- SD of\n mean log1p visitors')
layout <- matrix(x(1,2,3,3),2,2,byrow=TRUE)
layout <- matrix(c(1,2,3,3),2,2,byrow=TRUE)
multiplot(p1,p2,p3,layout=layout)
p2 <- foobar %>%
ggplot(aes(n))+
geom_histogram(fill='firebrick1', binwidth=1)+
labs(x='HPG genres per area')
multiplot(p1,p2,p3,layout=layout)
# this is interesting now that i am processing it, since the bottom plot is charting
# cases of identical genres per area it is possible that the outlier points
# are
foo %>%
group_by(air_genre_name, air_area_name) %>%
summarise(mean_log_visit=mean(log1p(visitors))) %>%
left_join(bar, by=c('air_genre_name', 'air_area_name')) %>%
group_by(n) %>%
summarise(mean_mlv=mean(mean_log_visit),
sd_mlv=sd(mean_log_visit)) %>%
replace_na(list(sd_mlv=0))
# this is interesting now that i am processing it, since the bottom plot is charting
# cases of identical genres per area it is possible that the outlier points
# are
tmp <- foo %>%
group_by(air_genre_name, air_area_name) %>%
summarise(mean_log_visit=mean(log1p(visitors))) %>%
left_join(bar, by=c('air_genre_name', 'air_area_name')) %>%
group_by(n) %>%
summarise(mean_mlv=mean(mean_log_visit),
sd_mlv=sd(mean_log_visit)) %>%
replace_na(list(sd_mlv=0))
View(tmp)
# this is interesting now that i am processing it, since the bottom plot is charting
# cases of identical genres per area it is possible that the outlier points
# are
tmp <- foo %>%
group_by(air_genre_name, air_area_name) %>%
summarise(mean_log_visit=mean(log1p(visitors))) %>%
left_join(bar, by=c('air_genre_name', 'air_area_name'))
View(tmp)
View(air_reserve)
View(air_reserve)
View(air_reserve)
bar <- hpg_reserve %>%
mutate(visit_date=date(visit_datetime)) %>%
group_by(hpg_store_id, visit_date) %>%
summarise(reserve_visitors_hpg=sum(reserve_visitors)) %>%
inner_join(store_ids, by='hpg_store_id')
# note for this section we are using the visitor datetime and not the reservation
# datetime
foo <- air_reserve %>%
mutate(visit_date=date(visit_datetime)) %>%
group_by(air_store_id, visit_date) %>%
summarise(reserve_visitors_air=sum(reserve_visitors))
# note for this section we are using the visitor datetime and not the reservation
# datetime
foo <- air_reserve %>%
mutate(visit_date=date(visit_datetime)) %>%
group_by(air_store_id, visit_date) %>%
summarise(reserve_visitors_air=sum(reserve_visitors))
bar
all_reserve <- air_visits %>%
inner_join(foo, by=c('air_store_id', 'visit_date')) %>%
inner_join(bar, by=c('air_store_id', 'visit_date')) %>%
mutate(reserve_visitors = reserve_visitors_air + reserve_visitors_hpg)
all_reserve
View(air_reserve)
foo
bar
head(all_reserve)
View(hpg_reserve)
View(air_visits)
p <- all_reserve %>%
filter(reserve_visitors <120) %>% # not sure about why we are limiting this set
ggplot(aes(x=reserve_visitors, y=visitors))+
geom_point(color='black', alpha=0.5)+
geom_abline(slope=1, intercept=0, color='grep60')+
geom_smooth(method='lm', color='dodgerblue')
# now we use the visits file as the baseline as it has the 'results' aka the real visitors
all_reserve <- air_visits %>%
inner_join(foo, by=c('air_store_id', 'visit_date')) %>%
inner_join(bar, by=c('air_store_id', 'visit_date')) %>%
mutate(reserve_visitors = reserve_visitors_air + reserve_visitors_hpg)
p <- all_reserve %>%
filter(reserve_visitors <120) %>% # not sure about why we are limiting this set
ggplot(aes(x=reserve_visitors, y=visitors))+
geom_point(color='black', alpha=0.5)+
geom_abline(slope=1, intercept=0, color='grep60')+
geom_smooth(method='lm', color='dodgerblue')
p <- all_reserve %>%
dplyr::filter(reserve_visitors < 120) %>% # not sure about why we are limiting this set
ggplot(aes(x=reserve_visitors, y=visitors))+
geom_point(color='black', alpha=0.5)+
geom_abline(slope=1, intercept=0, color='grep60')+
geom_smooth(method='lm', color='dodgerblue')
ggMarginal(p, type='histogram', fill='dodgerblue', bins=50)
p <- all_reserve %>%
dplyr::filter(reserve_visitors < 120) %>% # not sure about why we are limiting this set
ggplot(aes(x=reserve_visitors, y=visitors))+
geom_point(color='black', alpha=0.5)+
geom_abline(slope=1, intercept=0, color='grey60')+
geom_smooth(method='lm', color='dodgerblue')
ggMarginal(p, type='histogram', fill='dodgerblue', bins=50)
p1 <- all_reserve %>%
ggplot(aes(x=visitors - reserve_visitors))+
geom_histogram(binwidth=5, fill='grey18')+
coord_flip()+
labs(x='')
p2 <- all_reserve %>%
ggplot(aes(x=visitors - reserve_visitors_air))+
geom_histogram(binwidth=5, fill='dodgerblue')+
coord_flip()+
labs(x='')
p3 <- all_reserve %>%
ggplot(aes(x=visitors - reserve_visitors_hpg))+
geom_histogram(binwidth=5, fill='firebrick1')+
coord_flip()+
labs(x='')
p4 <- all_reserve %>%
ggplot(aes(x= visit_date, y= visitors-reserve_visitors))+
geom_hline(yintercept = c(150,0,-250))+
geom_line()+
geom_line(aes(x=visit_date, y= visitors-reserve_visitors_air + 150), color='dodgerblue')+
geom_line(aes(x=visit_date, y= visitors-reserve_visitors_hpg - 250), color='firebrick1')+
ggtitle('Visitors vs Reserved: All(Black), Air(Blue), HPG(Red)')
layout <- matrix(c(4,4,2,4,4,1,4,4,3), 3, 3, byrow=TRUE)
multiplot(p1,p2,p3,p4,layout=layout)
# quick look at the impact of holidays on the discrepancy between reservations and visitors
# using overlapping density plots
all_reserve %>%
mutate(date=visit_date) %>%
left_join(holidays, by='date') %>%
ggplot(aes(x=visitors-reserve_visitors, fill=holiday_flg))+
geom_density(alpha=0.5)
